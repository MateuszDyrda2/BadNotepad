<Window x:Class="BadNotepad.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BadNotepad"
        xmlns:m="clr-namespace:BadNotepad.Models"
        mc:Ignorable="d"
        Title="MainWindow" Height="720" Width="1280"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        MaxHeight="{Binding Source={x:Static SystemParameters.WorkArea}, Path=Height}"
        MaxWidth="{Binding Source={x:Static SystemParameters.WorkArea}, Path=Width}"
        Style="{StaticResource DarkWindowStyle}">
    <Window.Resources>
        <Viewbox x:Key="XSign" x:Shared="False">
            <Path Data="M0,0 L10,10 M0,10 L10, 0"
                    Stretch="Uniform"
                    Stroke="White"/>
        </Viewbox>
        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{StaticResource EditorDark}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" Focusable="False">
                            <DockPanel HorizontalAlignment="Stretch" LastChildFill="False">
                                <Canvas Width="7" Height="7" Margin="5,0">
                                    <Ellipse DockPanel.Dock="Left"
                                            Width="7" Height="7" Fill="White"/>
                                    <Canvas.Visibility>
                                        <Binding Path="IsTouched">
                                            <Binding.Converter>
                                                <BooleanToVisibilityConverter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </Canvas.Visibility>
                                </Canvas>
                                <ContentPresenter Margin="5,0,5,0" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                                <Button DockPanel.Dock="Right" Width="15" 
                                        Command="{Binding RelativeSource={
                                        RelativeSource FindAncestor, AncestorType={x:Type ListBox}},
                                        Path=DataContext.DeleteDoc}" CommandParameter="{Binding}">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Content"
                                                    Value="{StaticResource XSign}"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border Background="{TemplateBinding Background}">
                                                            <ContentPresenter Width="10" Height="10"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource ComplementaryEditor}">
                                                    </Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource ComplementaryEditor}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="{StaticResource EditorColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="MouseDown" Handler="ToggleButton_MouseDown"/>
        </Style>
    </Window.Resources>
    <DockPanel x:Name="RootWindow" LastChildFill="True">
        <StatusBar DockPanel.Dock="Bottom" Background="{StaticResource EditorDark}">
            <StatusBarItem>
                <TextBlock x:Name="cursorPosition"/>
            </StatusBarItem>
        </StatusBar>
        <ListBox x:Name="lb" DockPanel.Dock="Top" ItemsSource="{Binding Documents}" 
                 SelectedItem="{Binding CurrentDocument}" SelectionChanged="lb_SelectionChanged"
                 SelectionMode="Single" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 Background="{StaticResource EditorDark}" MinHeight="25" BorderThickness="0">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ContentPresenter/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Margin" Value="0.2"/>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <RadioButton Content="{Binding Filename}" GroupName="documents" Style="{StaticResource {x:Type ToggleButton}}">
                        <RadioButton.IsChecked>
                            <Binding Path="IsSelected"
                                     RelativeSource="{RelativeSource AncestorType=ListBoxItem}"
                                     Mode="TwoWay"/>
                        </RadioButton.IsChecked>
                    </RadioButton>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <ScrollViewer Style="{StaticResource DarkScrollBar}" DockPanel.Dock="Top" Background="{StaticResource EditorLight}">
            <DockPanel LastChildFill="True">
                <TextBlock TextWrapping="NoWrap" DataContext="{Binding LineNumbers, Mode=OneWay}" 
                           Text="{Binding Text}" MinWidth="19" HorizontalAlignment="Stretch"
                           TextAlignment="Right" Foreground="{StaticResource EditorBright}"
                           Background="{StaticResource EditorLight}" Margin="0,0,5,0"
                           FontFamily="{Binding Path=DataContext.Format.FontFamily, RelativeSource={
                    RelativeSource Mode=FindAncestor, AncestorType=Window}}" FontSize=
                                 "{Binding Path=DataContext.Format.FontSize, RelativeSource={
                    RelativeSource Mode=FindAncestor, AncestorType=Window}}"/>
                <m:CustomTextBox x:Name="textBox" 
                         AcceptsReturn="True" AcceptsTab="True"
                         Background="{StaticResource EditorColor}" Foreground="White"
                         DataContext="{Binding CurrentDocument}"
                         Text="{Binding Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         BorderThickness="0" TextChanged="textBox_TextChanged"
                         FontFamily="{Binding Path=DataContext.Format.FontFamily, RelativeSource={
                    RelativeSource Mode=FindAncestor, AncestorType=Window}}" FontSize=
                                 "{Binding Path=DataContext.Format.FontSize, RelativeSource={
                    RelativeSource Mode=FindAncestor, AncestorType=Window}}">
                </m:CustomTextBox>
            </DockPanel>
        </ScrollViewer>
    </DockPanel>

</Window>
